#+TITLE: Emacs Python mode configuration
#+STARTUP: overview indent

* Virtual environments

#+BEGIN_SRC emacs-lisp
  (use-package conda
     :ensure t
     :init
       (setq conda-anaconda-home my-anaconda-dir)
       (setq conda-env-home-directory my-anaconda-dir)

     :config
       ;; Fix bug in conda.el package for Windows systems
       (when (eq window-system 'w32)
         (defun conda--get-executable-path ()
           "Return full path to Conda binary, or throw an error if it can't be found.
           Cached for the lifetime of the process."
           (if (not (eq conda--executable-path nil))
               conda--executable-path
             (setq conda--executable-path
                   (cond
                    ((file-executable-p (f-join conda-anaconda-home conda-env-executables-dir "conda.exe"))
                     (f-join conda-anaconda-home conda-env-executables-dir "conda.exe"))
                    ((file-executable-p (f-join conda-anaconda-home conda-env-executables-dir "mamba.exe"))
                     (f-join conda-anaconda-home conda-env-executables-dir "mamba.exe"))
                    ((executable-find "conda.exe"))
                    ((executable-find "mamba.exe"))
                    (t (error
                        "There doesn't appear to be a conda or mamba executable on your exec-path.")))))))

       (conda-env-initialize-interactive-shells)
       (conda-env-initialize-eshell)
       (conda-env-autoactivate-mode 0)
       (add-hook 'find-file-hook
                 (lambda ()
                   (when (bound-and-true-p conda-project-env-path)
                     (conda-env-activate-for-buffer)))))
#+END_SRC

* Language server for Python

See the Emacs documentation at [[https://emacs-lsp.github.io/lsp-pyright/][lsp-pyright]].
#+begin_src emacs-lisp
  (use-package lsp-pyright
    :ensure t
    :hook (python-mode . (lambda ()
                           (require 'lsp-pyright)
                           (lsp))))
#+end_src

** Notes

Install language server before executing the following.
lsp-ui-sideline to adjust lsp-ui behavior
lsp-focus-frame to put cursor in documentation popup

  (use-package python-mode
    :ensure nil
    :hook (python-mode . lsp-deferred)
    :custom
      (python-shell-interpreter "python3")
      (dap-python-executable "python3")
      (dap-python-debugger 'debugpy)
    :config
      (require 'dap-python))

  (defun my-lsp-mode-setup ()
    (setq lsp-headerline-breadcrumb-segments '(path-up-to-project file symbols))
    (lsp-headerline-breadcrumb-mode))

  (use-package lsp-mode
    :commands (lsp lsp-deferred)
    :hook (lsp-mode . my-lsp-mode-setup)
    :init
    (setq lsp-keymap-prefix "C-c l")
    :config
    (lsp-enable-which-key-integration t))

  (use-package lsp-ui
    :hook (lsp-mode . lsp-ui-mode)
    :custom
    (lsp-ui-doc-position 'bottom))

  (use-package lsp-treemacs
      :after lsp)

  (use-package lsp-ivy)

  (use-package which-key)

(use-package typescript-mode
    :mode "\\.ts\\'"
    :hook (typescript-mode . lsp-deferred)
    :config
    (setq typescript-indent-level 2))

Completion (emacs completion-at-point with ivy, perhaps)
Gives automatic completion menu
Signature help (eldoc?, ivy?)

(use-package company
      :after lsp-mode
      :hook (lsp-mode . company-mode)
      :bind (:map company-active-map
                  ("<tab>" . company-complete-selection))
            (:map lsp-mode-map
                  ("<tab>" . company-indent-or-complete-common))
      :custom
      (company-minimum-prefix-length 1)
      (company-idle-delay 0.0))

    (use-package company-box
      :hook (company-mode . company-box-mode))

